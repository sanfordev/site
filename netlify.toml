# Installs the Next.js & Lighthouse Build Plugins for all deploy contexts
[[plugins]]
  package = "@netlify/plugin-nextjs"
  
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  [plugins.inputs]
    output_path = "reports/lighthouse"
    audits = [
      { path = "/" },
      { path = "/about" },
      { path = "/services" },
      { path = "/portfolio" },
      { path = "/blog" },
      { path = "/blog/all" },
      { path = "/contact" }
    ]
    thresholds = [
      { performance = 0.9, accessibility = 0.9, "best-practices" = 0.9, seo = 0.9 }
    ]

[build]
  command = "npm run build"
  publish = "out"

[build.environment]
  NEXT_TELEMETRY_DISABLED = "1"
  NODE_VERSION = "20.19.0"
  NPM_VERSION = "10.9.2"
  NEXT_PUBLIC_SITE_URL = "https://sanfordev.com"
  NODE_OPTIONS = "--max-old-space-size=4096"

# Development settings
[dev]
  command = "npm run dev"
  targetPort = 3000
  port = 8888
  framework = "next"

# Headers to enable security and caching best practices
[[headers]]
  for = "/*"
  [headers.values]
    X-DNS-Prefetch-Control = "on"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), interest-cohort=()"
    X-XSS-Protection = "1; mode=block"
    Content-Security-Policy = "default-src 'self'; connect-src 'self' https://formspree.io https://*.services-prod.nsvcs.net https://*.netlify.app; script-src 'self' 'unsafe-eval' 'unsafe-inline' 'nonce-{NONCE}'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https: https://*.netlify.app; font-src 'self' data: https:;"

# Cache control for static assets
[[headers]]
  for = "/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[images]
  remote_images = ["https://cdn.sanity.io/.*", "https://images.unsplash.com/.*", "https://res.cloudinary.com"]

# Primary domain redirects
[[redirects]]
  from = "https://www.sanfordev.io/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://sanfordev.io/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://www.sanfordev.com/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://www.sanfordev.net/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://sanfordev.net/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://www.devsouth.us/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://devsouth.us/*"
  to = "https://sanfordev.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "/blog/*"
  to = "/blog/[slug].html"
  status = 200

[[redirects]]
  from = "/portfolio/*"
  to = "/portfolio/[id].html"
  status = 200

# Sanity Studio redirects
[[redirects]]
  from = "/studio/*"
  to = "https://cms.sanfor.dev/:splat"
  status = 301
  force = true

[[redirects]]
  from = "/blog/draft/*"
  to = "https://cms.sanfor.dev/:splat"
  status = 301
  force = true

[[redirects]]
  from = "/blog/studio/*"
  to = "https://cms.sanfor.dev/:splat"
  status = 301
  force = true

# Keep this as the last redirect rule
[[redirects]]
  from = "/*"
  to = "/404.html"
  status = 404

[build.processing]
  skip_processing = false
[build.processing.css]
  bundle = true
  minify = true
[build.processing.js]
  bundle = true
  minify = true
[build.processing.html]
  pretty_urls = true
[build.processing.images]
  compress = true

[build.lifecycle]
  onSuccess = "npm run verify:files"

# Environment-specific settings
[context.production]
  environment = { NODE_ENV = "production", NEXT_PUBLIC_ENV = "production" }

[context.deploy-preview]
  environment = { NODE_ENV = "preview", NEXT_PUBLIC_ENV = "preview" }

[context.branch-deploy]
  environment = { NODE_ENV = "staging", NEXT_PUBLIC_ENV = "staging" }